{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack\\\\Dropbox\\\\HW\\\\INF 141 - CS 121\\\\Project 3\\\\Milestone 2\\\\gugol\\\\src\\\\Components\\\\ListResult.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport forEach from \"lodash/forEach\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(1.5),\n    maxWidth: \"630px\",\n    textAlign: \"left\",\n    fontFamily: \"Arial\",\n    color: theme.palette.text.secondary\n  },\n  url: {\n    color: \"#3c4043\",\n    fontSize: 13\n  },\n  title: {\n    color: \"#1a0db2\",\n    fontSize: 19,\n    lineHeight: 1.8,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n      textDecoration: \"underline\"\n    }\n  },\n  snippet: {\n    color: \"#3c4043\",\n    fontSize: 15,\n    lineHeight: 1.5,\n    wordBreak: \"break-word\"\n  }\n}));\nexport const ListResult = ({\n  url,\n  title,\n  snippet,\n  searchLemmatized\n}) => {\n  const classes = useStyles();\n\n  if (title === null) {\n    title = url.slice(0, 59) + \"...\";\n  } else if (title === \"\" && snippet !== null && snippet !== \"\") {\n    title = snippet.slice(0, 59) + \"...\";\n  } else if (title.length > 59) {\n    title += \"...\";\n  }\n\n  if (snippet === null) {\n    snippet = url;\n  } else if (snippet === \"\" && title !== null && title !== \"\") {\n    snippet = title.slice(0, 200) + \"...\";\n  } else if (snippet !== null && snippet.length > 349) {\n    snippet = snippet.slice(0, 200) + \"...\";\n  }\n\n  let shortUrl = url;\n\n  if (url.length > 80) {\n    shortUrl = url.slice(0, 75) + \"...\";\n  }\n\n  const formattedUrl = shortUrl.replace(/\\//g, \" › \");\n  return React.createElement(Paper, {\n    elevation: 1,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, formattedUrl), React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, formattedUrl), React.createElement(Typography, {\n    className: classes.title,\n    onClick: () => window.location.href = `//${url}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    className: classes.snippet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, snippet.split(\" \").map(word => {\n    let isBold = false;\n    forEach(searchLemmatized, lemmatized => {\n      if (RegExp(`\\\\b${lemmatized}\\\\b`, \"g\").test(word.toLowerCase())) isBold = true;\n    });\n    return isBold ? React.createElement(\"b\", {\n      key: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", word) : ` ${word}`;\n  })));\n};","map":{"version":3,"sources":["C:/Users/Jack/Dropbox/HW/INF 141 - CS 121/Project 3/Milestone 2/gugol/src/Components/ListResult.js"],"names":["React","Link","makeStyles","Paper","Typography","forEach","useStyles","theme","paper","padding","spacing","marginBottom","marginRight","maxWidth","textAlign","fontFamily","color","palette","text","secondary","url","fontSize","title","lineHeight","textDecoration","cursor","snippet","wordBreak","ListResult","searchLemmatized","classes","slice","length","shortUrl","formattedUrl","replace","window","location","href","split","map","word","isBold","lemmatized","RegExp","test","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd,CADJ;AAELC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;AAGLE,IAAAA,WAAW,EAAEL,KAAK,CAACG,OAAN,CAAc,GAAd,CAHR;AAILG,IAAAA,QAAQ,EAAE,OAJL;AAKLC,IAAAA,SAAS,EAAE,MALN;AAMLC,IAAAA,UAAU,EAAE,OANP;AAOLC,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC;AAPrB,GAD8B;AAUrCC,EAAAA,GAAG,EAAE;AACHJ,IAAAA,KAAK,EAAE,SADJ;AAEHK,IAAAA,QAAQ,EAAE;AAFP,GAVgC;AAcrCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,KAAK,EAAE,SADF;AAELK,IAAAA,QAAQ,EAAE,EAFL;AAGLE,IAAAA,UAAU,EAAE,GAHP;AAILC,IAAAA,cAAc,EAAE,MAJX;AAKL,eAAW;AACTC,MAAAA,MAAM,EAAE,SADC;AAETD,MAAAA,cAAc,EAAE;AAFP;AALN,GAd8B;AAwBrCE,EAAAA,OAAO,EAAE;AACPV,IAAAA,KAAK,EAAE,SADA;AAEPK,IAAAA,QAAQ,EAAE,EAFH;AAGPE,IAAAA,UAAU,EAAE,GAHL;AAIPI,IAAAA,SAAS,EAAE;AAJJ;AAxB4B,CAAL,CAAN,CAA5B;AAgCA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAER,EAAAA,GAAF;AAAOE,EAAAA,KAAP;AAAcI,EAAAA,OAAd;AAAuBG,EAAAA;AAAvB,CAAD,KAA+C;AACvE,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;;AAEA,MAAIgB,KAAK,KAAK,IAAd,EAAoB;AAClBA,IAAAA,KAAK,GAAGF,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAa,EAAb,IAAmB,KAA3B;AACD,GAFD,MAEO,IAAIT,KAAK,KAAK,EAAV,IAAgBI,OAAO,KAAK,IAA5B,IAAoCA,OAAO,KAAK,EAApD,EAAwD;AAC7DJ,IAAAA,KAAK,GAAGI,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,EAAjB,IAAuB,KAA/B;AACD,GAFM,MAEA,IAAIT,KAAK,CAACU,MAAN,GAAe,EAAnB,EAAuB;AAC5BV,IAAAA,KAAK,IAAI,KAAT;AACD;;AAED,MAAII,OAAO,KAAK,IAAhB,EAAsB;AACpBA,IAAAA,OAAO,GAAGN,GAAV;AACD,GAFD,MAEO,IAAIM,OAAO,KAAK,EAAZ,IAAkBJ,KAAK,KAAK,IAA5B,IAAoCA,KAAK,KAAK,EAAlD,EAAsD;AAC3DI,IAAAA,OAAO,GAAGJ,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAe,GAAf,IAAsB,KAAhC;AACD,GAFM,MAEA,IAAIL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACM,MAAR,GAAiB,GAAzC,EAA8C;AACnDN,IAAAA,OAAO,GAAGA,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,GAAjB,IAAwB,KAAlC;AACD;;AAED,MAAIE,QAAQ,GAAGb,GAAf;;AAEA,MAAIA,GAAG,CAACY,MAAJ,GAAa,EAAjB,EAAqB;AACnBC,IAAAA,QAAQ,GAAGb,GAAG,CAACW,KAAJ,CAAU,CAAV,EAAa,EAAb,IAAmB,KAA9B;AACD;;AAED,QAAMG,YAAY,GAAGD,QAAQ,CAACE,OAAT,CAAiB,KAAjB,EAAwB,KAAxB,CAArB;AAEA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAEL,OAAO,CAACtB,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEsB,OAAO,CAACV,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCc,YAArC,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,YAAP,CAFF,EAGE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEJ,OAAO,CAACR,KADrB;AAEE,IAAA,OAAO,EAAE,MAAOc,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,KAAIlB,GAAI,EAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGE,KAJH,CAHF,EASE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEQ,OAAO,CAACJ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACa,KAAR,CAAc,GAAd,EAAmBC,GAAnB,CAAuBC,IAAI,IAAI;AAC9B,QAAIC,MAAM,GAAG,KAAb;AACArC,IAAAA,OAAO,CAACwB,gBAAD,EAAmBc,UAAU,IAAI;AACtC,UAAIC,MAAM,CAAE,MAAKD,UAAW,KAAlB,EAAwB,GAAxB,CAAN,CAAmCE,IAAnC,CAAwCJ,IAAI,CAACK,WAAL,EAAxC,CAAJ,EACEJ,MAAM,GAAG,IAAT;AACH,KAHM,CAAP;AAIA,WAAOA,MAAM,GAAG;AAAG,MAAA,GAAG,EAAEtB,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAeqB,IAAf,CAAH,GAA+B,IAAGA,IAAK,EAApD;AACD,GAPA,CADH,CATF,CADF;AAsBD,CAjDM","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport forEach from \"lodash/forEach\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(1.5),\r\n    marginBottom: theme.spacing(2),\r\n    marginRight: theme.spacing(1.5),\r\n    maxWidth: \"630px\",\r\n    textAlign: \"left\",\r\n    fontFamily: \"Arial\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  url: {\r\n    color: \"#3c4043\",\r\n    fontSize: 13\r\n  },\r\n  title: {\r\n    color: \"#1a0db2\",\r\n    fontSize: 19,\r\n    lineHeight: 1.8,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      textDecoration: \"underline\"\r\n    }\r\n  },\r\n  snippet: {\r\n    color: \"#3c4043\",\r\n    fontSize: 15,\r\n    lineHeight: 1.5,\r\n    wordBreak: \"break-word\"\r\n  }\r\n}));\r\n\r\nexport const ListResult = ({ url, title, snippet, searchLemmatized }) => {\r\n  const classes = useStyles();\r\n\r\n  if (title === null) {\r\n    title = url.slice(0, 59) + \"...\";\r\n  } else if (title === \"\" && snippet !== null && snippet !== \"\") {\r\n    title = snippet.slice(0, 59) + \"...\";\r\n  } else if (title.length > 59) {\r\n    title += \"...\";\r\n  }\r\n\r\n  if (snippet === null) {\r\n    snippet = url;\r\n  } else if (snippet === \"\" && title !== null && title !== \"\") {\r\n    snippet = title.slice(0, 200) + \"...\";\r\n  } else if (snippet !== null && snippet.length > 349) {\r\n    snippet = snippet.slice(0, 200) + \"...\";\r\n  }\r\n\r\n  let shortUrl = url;\r\n\r\n  if (url.length > 80) {\r\n    shortUrl = url.slice(0, 75) + \"...\";\r\n  }\r\n\r\n  const formattedUrl = shortUrl.replace(/\\//g, \" › \");\r\n\r\n  return (\r\n    <Paper elevation={1} className={classes.paper}>\r\n      <Typography className={classes.url}>{formattedUrl}</Typography>\r\n      <Link>{formattedUrl}</Link>\r\n      <Typography\r\n        className={classes.title}\r\n        onClick={() => (window.location.href = `//${url}`)}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography className={classes.snippet}>\r\n        {snippet.split(\" \").map(word => {\r\n          let isBold = false;\r\n          forEach(searchLemmatized, lemmatized => {\r\n            if (RegExp(`\\\\b${lemmatized}\\\\b`, \"g\").test(word.toLowerCase()))\r\n              isBold = true;\r\n          });\r\n          return isBold ? <b key={url}> {word}</b> : ` ${word}`;\r\n        })}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}