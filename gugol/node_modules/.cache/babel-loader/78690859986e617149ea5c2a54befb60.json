{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack\\\\Dropbox\\\\HW\\\\INF 141 - CS 121\\\\Project 3\\\\Milestone 2\\\\gugol\\\\src\\\\Containers\\\\SearchingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ListResult } from \"../Components/ListResult\";\nimport { PageNavigation } from \"../Components/PageNavigation\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport TopBar from \"../Components/TopBar\";\nimport axios from \"axios\";\nimport { Box, Divider } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: ({\n      matches\n    }) => matches ? theme.spacing(1.5) : theme.spacing(15)\n  },\n  stats: {\n    color: '#52565a',\n    fontSize: 14,\n    fontFamily: 'Arial',\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport const SearchingPage = () => {\n  const [results, setResults] = useState([]);\n  const [querySpeed, setQuerySpeed] = useState(\"\");\n  const [numberResultsFound, setNumberResultsFound] = useState(0);\n  const [searchText, setSearchText] = useState([]);\n  const [searchLemmatized, setSearchLemmatized] = useState([]);\n  const history = useHistory();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(680));\n  const classes = useStyles({\n    matches\n  });\n\n  const getParams = () => {\n    const decoded = decodeURI(history.location.search).split(/^(\\?q=)?/)[2].split(\"&\");\n    const params = {\n      query: decoded[0],\n      start: decoded[1].replace(\"start=\", \"\")\n    };\n    return params;\n  };\n\n  const getData = async () => {\n    const {\n      query,\n      start\n    } = getParams();\n    const reply = await axios({\n      method: 'get',\n      url: 'http://127.0.0.1:5000/api',\n      params: {\n        query: query,\n        start: start\n      }\n    });\n    setResults(reply.data.results);\n    setSearchText(query);\n    setQuerySpeed(reply.data.query_speed);\n    setNumberResultsFound(reply.data.number_results_found);\n    setSearchLemmatized(reply.data.search_lemmatized);\n  };\n\n  const onSearch = () => {\n    if (searchText.length > 3) {\n      history.push(`/search?q=${searchText}&start=0`);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line\n  }, [history.location.search]);\n  return React.createElement(React.Fragment, null, React.createElement(TopBar, {\n    searchText: searchText,\n    setSearchText: setSearchText,\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Box, {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"About \", (Math.floor(numberResultsFound / 100) * 100).toLocaleString(), \" results (\", querySpeed, \" seconds)\"), results.map((result, index) => React.createElement(ListResult, {\n    key: result.url,\n    index: index,\n    url: result.url,\n    title: result.title,\n    snippet: result.snippet,\n    searchLemmatized: searchLemmatized,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(PageNavigation, {\n    searchText: searchText,\n    numberResultsFound: numberResultsFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["C:/Users/Jack/Dropbox/HW/INF 141 - CS 121/Project 3/Milestone 2/gugol/src/Containers/SearchingPage.js"],"names":["React","useState","useEffect","useHistory","ListResult","PageNavigation","makeStyles","useTheme","useMediaQuery","TopBar","axios","Box","Divider","useStyles","theme","root","marginLeft","matches","spacing","stats","color","fontSize","fontFamily","marginTop","marginBottom","SearchingPage","results","setResults","querySpeed","setQuerySpeed","numberResultsFound","setNumberResultsFound","searchText","setSearchText","searchLemmatized","setSearchLemmatized","history","breakpoints","down","classes","getParams","decoded","decodeURI","location","search","split","params","query","start","replace","getData","reply","method","url","data","query_speed","number_results_found","search_lemmatized","onSearch","length","push","window","scrollTo","Math","floor","toLocaleString","map","result","index","title","snippet"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListResult } from \"../Components/ListResult\"\r\nimport { PageNavigation } from \"../Components/PageNavigation\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport TopBar from \"../Components/TopBar\"\r\nimport axios from \"axios\";\r\nimport { Box, Divider } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmarginLeft: ({ matches }) => matches ? theme.spacing(1.5) : theme.spacing(15),\r\n\t},\r\n\tstats: {\r\n\t\tcolor: '#52565a',\r\n\t\tfontSize: 14,\r\n\t\tfontFamily: 'Arial',\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginBottom: theme.spacing(2)\r\n\t},\r\n}));\r\n\r\nexport const SearchingPage = () => {\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [querySpeed, setQuerySpeed] = useState(\"\")\r\n\tconst [numberResultsFound, setNumberResultsFound] = useState(0)\r\n\tconst [searchText, setSearchText] = useState([])\r\n\tconst [searchLemmatized, setSearchLemmatized] = useState([])\r\n\tconst history = useHistory();\r\n\tconst theme = useTheme();\r\n\tconst matches = useMediaQuery(theme.breakpoints.down(680));\r\n\tconst classes = useStyles({ matches });\r\n\r\n\tconst getParams = () => {\r\n\t\tconst decoded = decodeURI(history.location.search).split(/^(\\?q=)?/)[2].split(\"&\");\r\n\t\tconst params = {\r\n\t\t\tquery: decoded[0],\r\n\t\t\tstart: decoded[1].replace(\"start=\", \"\"),\r\n\t\t}\r\n\t\treturn params;\r\n\t}\r\n\r\n\tconst getData = async () => {\r\n\t\tconst { query, start } = getParams();\r\n\t\tconst reply = await axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'http://127.0.0.1:5000/api',\r\n\t\t\tparams: {\r\n\t\t\t\tquery: query,\r\n\t\t\t\tstart: start\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetResults(reply.data.results)\r\n\t\tsetSearchText(query)\r\n\t\tsetQuerySpeed(reply.data.query_speed)\r\n\t\tsetNumberResultsFound(reply.data.number_results_found)\r\n\t\tsetSearchLemmatized(reply.data.search_lemmatized)\r\n\t}\r\n\r\n\tconst onSearch = () => {\r\n\t\tif (searchText.length > 3) {\r\n\t\t\thistory.push(`/search?q=${searchText}&start=0`);\r\n\t\t\twindow.scrollTo(0, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetData()\r\n\t\t// eslint-disable-next-line\r\n\t}, [history.location.search]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TopBar\r\n\t\t\t\tsearchText={searchText}\r\n\t\t\t\tsetSearchText={setSearchText}\r\n\t\t\t\tonSearch={onSearch}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Box className={classes.stats} >\r\n\t\t\t\t\tAbout {(Math.floor(numberResultsFound / 100) * 100).toLocaleString()} results ({querySpeed} seconds)\r\n\t\t\t</Box>\r\n\t\t\t\t{results.map((result, index) =>\r\n\t\t\t\t\t<ListResult\r\n\t\t\t\t\t\tkey={result.url}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\turl={result.url}\r\n\t\t\t\t\t\ttitle={result.title}\r\n\t\t\t\t\t\tsnippet={result.snippet}\r\n\t\t\t\t\t\tsearchLemmatized={searchLemmatized}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<PageNavigation\r\n\t\t\t\t\tsearchText={searchText}\r\n\t\t\t\t\tnumberResultsFound={numberResultsFound}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}